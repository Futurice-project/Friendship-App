// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChatView render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(ChatView)
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "auth": Object {
        "data": Object {
          "decoded": Object {
            "id": 1,
          },
        },
      },
      "chatRoom": Object {
        "creator": "test",
        "id": 4,
        "message": Array [
          Object {
            "chat_time": "05-04-2018",
            "chatroom_id": 4,
            "id": 23,
            "read": false,
            "text_messages": "Hello",
            "user_id": 3,
          },
          Object {
            "chat_time": "05-05-2018",
            "chatroom_id": 4,
            "id": 24,
            "read": true,
            "text_messages": "How are you",
            "user_id": 4,
          },
        ],
        "receiver": "test",
      },
      "chatRoomMessages": [Function],
      "currentUserId": 1,
      "onViewProfile": [Function],
      "sendMessage": [Function],
      "sentMessage": undefined,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      },
      "updateReadMessages": [Function],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "auth": Object {
          "data": Object {
            "decoded": Object {
              "id": 1,
            },
          },
        },
        "chatRoom": Object {
          "creator": "test",
          "id": 4,
          "message": Array [
            Object {
              "chat_time": "05-04-2018",
              "chatroom_id": 4,
              "id": 23,
              "read": false,
              "text_messages": "Hello",
              "user_id": 3,
            },
            Object {
              "chat_time": "05-05-2018",
              "chatroom_id": 4,
              "id": 24,
              "read": true,
              "text_messages": "How are you",
              "user_id": 4,
            },
          ],
          "receiver": "test",
        },
        "chatRoomMessages": [Function],
        "currentUserId": 1,
        "onViewProfile": [Function],
        "sendMessage": [Function],
        "sentMessage": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
        "updateReadMessages": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
